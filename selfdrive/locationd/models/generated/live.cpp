#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2143820057594458175) {
   out_2143820057594458175[0] = 0;
   out_2143820057594458175[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2143820057594458175[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2143820057594458175[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2143820057594458175[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2143820057594458175[5] = -sin(in_vec[1]);
   out_2143820057594458175[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2143820057594458175[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2143820057594458175[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2143820057594458175[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2143820057594458175[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2143820057594458175[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2143820057594458175[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2143820057594458175[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2143820057594458175[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2143820057594458175[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2143820057594458175[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2143820057594458175[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7485915491974212468) {
   out_7485915491974212468[0] = delta_x[0] + nom_x[0];
   out_7485915491974212468[1] = delta_x[1] + nom_x[1];
   out_7485915491974212468[2] = delta_x[2] + nom_x[2];
   out_7485915491974212468[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7485915491974212468[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7485915491974212468[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7485915491974212468[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7485915491974212468[7] = delta_x[6] + nom_x[7];
   out_7485915491974212468[8] = delta_x[7] + nom_x[8];
   out_7485915491974212468[9] = delta_x[8] + nom_x[9];
   out_7485915491974212468[10] = delta_x[9] + nom_x[10];
   out_7485915491974212468[11] = delta_x[10] + nom_x[11];
   out_7485915491974212468[12] = delta_x[11] + nom_x[12];
   out_7485915491974212468[13] = delta_x[12] + nom_x[13];
   out_7485915491974212468[14] = delta_x[13] + nom_x[14];
   out_7485915491974212468[15] = delta_x[14] + nom_x[15];
   out_7485915491974212468[16] = delta_x[15] + nom_x[16];
   out_7485915491974212468[17] = delta_x[16] + nom_x[17];
   out_7485915491974212468[18] = delta_x[17] + nom_x[18];
   out_7485915491974212468[19] = delta_x[18] + nom_x[19];
   out_7485915491974212468[20] = delta_x[19] + nom_x[20];
   out_7485915491974212468[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7598107627610175110) {
   out_7598107627610175110[0] = -nom_x[0] + true_x[0];
   out_7598107627610175110[1] = -nom_x[1] + true_x[1];
   out_7598107627610175110[2] = -nom_x[2] + true_x[2];
   out_7598107627610175110[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7598107627610175110[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7598107627610175110[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7598107627610175110[6] = -nom_x[7] + true_x[7];
   out_7598107627610175110[7] = -nom_x[8] + true_x[8];
   out_7598107627610175110[8] = -nom_x[9] + true_x[9];
   out_7598107627610175110[9] = -nom_x[10] + true_x[10];
   out_7598107627610175110[10] = -nom_x[11] + true_x[11];
   out_7598107627610175110[11] = -nom_x[12] + true_x[12];
   out_7598107627610175110[12] = -nom_x[13] + true_x[13];
   out_7598107627610175110[13] = -nom_x[14] + true_x[14];
   out_7598107627610175110[14] = -nom_x[15] + true_x[15];
   out_7598107627610175110[15] = -nom_x[16] + true_x[16];
   out_7598107627610175110[16] = -nom_x[17] + true_x[17];
   out_7598107627610175110[17] = -nom_x[18] + true_x[18];
   out_7598107627610175110[18] = -nom_x[19] + true_x[19];
   out_7598107627610175110[19] = -nom_x[20] + true_x[20];
   out_7598107627610175110[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2937987622268780709) {
   out_2937987622268780709[0] = 1.0;
   out_2937987622268780709[1] = 0;
   out_2937987622268780709[2] = 0;
   out_2937987622268780709[3] = 0;
   out_2937987622268780709[4] = 0;
   out_2937987622268780709[5] = 0;
   out_2937987622268780709[6] = 0;
   out_2937987622268780709[7] = 0;
   out_2937987622268780709[8] = 0;
   out_2937987622268780709[9] = 0;
   out_2937987622268780709[10] = 0;
   out_2937987622268780709[11] = 0;
   out_2937987622268780709[12] = 0;
   out_2937987622268780709[13] = 0;
   out_2937987622268780709[14] = 0;
   out_2937987622268780709[15] = 0;
   out_2937987622268780709[16] = 0;
   out_2937987622268780709[17] = 0;
   out_2937987622268780709[18] = 0;
   out_2937987622268780709[19] = 0;
   out_2937987622268780709[20] = 0;
   out_2937987622268780709[21] = 0;
   out_2937987622268780709[22] = 1.0;
   out_2937987622268780709[23] = 0;
   out_2937987622268780709[24] = 0;
   out_2937987622268780709[25] = 0;
   out_2937987622268780709[26] = 0;
   out_2937987622268780709[27] = 0;
   out_2937987622268780709[28] = 0;
   out_2937987622268780709[29] = 0;
   out_2937987622268780709[30] = 0;
   out_2937987622268780709[31] = 0;
   out_2937987622268780709[32] = 0;
   out_2937987622268780709[33] = 0;
   out_2937987622268780709[34] = 0;
   out_2937987622268780709[35] = 0;
   out_2937987622268780709[36] = 0;
   out_2937987622268780709[37] = 0;
   out_2937987622268780709[38] = 0;
   out_2937987622268780709[39] = 0;
   out_2937987622268780709[40] = 0;
   out_2937987622268780709[41] = 0;
   out_2937987622268780709[42] = 0;
   out_2937987622268780709[43] = 0;
   out_2937987622268780709[44] = 1.0;
   out_2937987622268780709[45] = 0;
   out_2937987622268780709[46] = 0;
   out_2937987622268780709[47] = 0;
   out_2937987622268780709[48] = 0;
   out_2937987622268780709[49] = 0;
   out_2937987622268780709[50] = 0;
   out_2937987622268780709[51] = 0;
   out_2937987622268780709[52] = 0;
   out_2937987622268780709[53] = 0;
   out_2937987622268780709[54] = 0;
   out_2937987622268780709[55] = 0;
   out_2937987622268780709[56] = 0;
   out_2937987622268780709[57] = 0;
   out_2937987622268780709[58] = 0;
   out_2937987622268780709[59] = 0;
   out_2937987622268780709[60] = 0;
   out_2937987622268780709[61] = 0;
   out_2937987622268780709[62] = 0;
   out_2937987622268780709[63] = 0;
   out_2937987622268780709[64] = 0;
   out_2937987622268780709[65] = 0;
   out_2937987622268780709[66] = -0.5*state[4];
   out_2937987622268780709[67] = -0.5*state[5];
   out_2937987622268780709[68] = -0.5*state[6];
   out_2937987622268780709[69] = 0;
   out_2937987622268780709[70] = 0;
   out_2937987622268780709[71] = 0;
   out_2937987622268780709[72] = 0;
   out_2937987622268780709[73] = 0;
   out_2937987622268780709[74] = 0;
   out_2937987622268780709[75] = 0;
   out_2937987622268780709[76] = 0;
   out_2937987622268780709[77] = 0;
   out_2937987622268780709[78] = 0;
   out_2937987622268780709[79] = 0;
   out_2937987622268780709[80] = 0;
   out_2937987622268780709[81] = 0;
   out_2937987622268780709[82] = 0;
   out_2937987622268780709[83] = 0;
   out_2937987622268780709[84] = 0;
   out_2937987622268780709[85] = 0;
   out_2937987622268780709[86] = 0;
   out_2937987622268780709[87] = 0.5*state[3];
   out_2937987622268780709[88] = 0.5*state[6];
   out_2937987622268780709[89] = -0.5*state[5];
   out_2937987622268780709[90] = 0;
   out_2937987622268780709[91] = 0;
   out_2937987622268780709[92] = 0;
   out_2937987622268780709[93] = 0;
   out_2937987622268780709[94] = 0;
   out_2937987622268780709[95] = 0;
   out_2937987622268780709[96] = 0;
   out_2937987622268780709[97] = 0;
   out_2937987622268780709[98] = 0;
   out_2937987622268780709[99] = 0;
   out_2937987622268780709[100] = 0;
   out_2937987622268780709[101] = 0;
   out_2937987622268780709[102] = 0;
   out_2937987622268780709[103] = 0;
   out_2937987622268780709[104] = 0;
   out_2937987622268780709[105] = 0;
   out_2937987622268780709[106] = 0;
   out_2937987622268780709[107] = 0;
   out_2937987622268780709[108] = -0.5*state[6];
   out_2937987622268780709[109] = 0.5*state[3];
   out_2937987622268780709[110] = 0.5*state[4];
   out_2937987622268780709[111] = 0;
   out_2937987622268780709[112] = 0;
   out_2937987622268780709[113] = 0;
   out_2937987622268780709[114] = 0;
   out_2937987622268780709[115] = 0;
   out_2937987622268780709[116] = 0;
   out_2937987622268780709[117] = 0;
   out_2937987622268780709[118] = 0;
   out_2937987622268780709[119] = 0;
   out_2937987622268780709[120] = 0;
   out_2937987622268780709[121] = 0;
   out_2937987622268780709[122] = 0;
   out_2937987622268780709[123] = 0;
   out_2937987622268780709[124] = 0;
   out_2937987622268780709[125] = 0;
   out_2937987622268780709[126] = 0;
   out_2937987622268780709[127] = 0;
   out_2937987622268780709[128] = 0;
   out_2937987622268780709[129] = 0.5*state[5];
   out_2937987622268780709[130] = -0.5*state[4];
   out_2937987622268780709[131] = 0.5*state[3];
   out_2937987622268780709[132] = 0;
   out_2937987622268780709[133] = 0;
   out_2937987622268780709[134] = 0;
   out_2937987622268780709[135] = 0;
   out_2937987622268780709[136] = 0;
   out_2937987622268780709[137] = 0;
   out_2937987622268780709[138] = 0;
   out_2937987622268780709[139] = 0;
   out_2937987622268780709[140] = 0;
   out_2937987622268780709[141] = 0;
   out_2937987622268780709[142] = 0;
   out_2937987622268780709[143] = 0;
   out_2937987622268780709[144] = 0;
   out_2937987622268780709[145] = 0;
   out_2937987622268780709[146] = 0;
   out_2937987622268780709[147] = 0;
   out_2937987622268780709[148] = 0;
   out_2937987622268780709[149] = 0;
   out_2937987622268780709[150] = 0;
   out_2937987622268780709[151] = 0;
   out_2937987622268780709[152] = 0;
   out_2937987622268780709[153] = 1.0;
   out_2937987622268780709[154] = 0;
   out_2937987622268780709[155] = 0;
   out_2937987622268780709[156] = 0;
   out_2937987622268780709[157] = 0;
   out_2937987622268780709[158] = 0;
   out_2937987622268780709[159] = 0;
   out_2937987622268780709[160] = 0;
   out_2937987622268780709[161] = 0;
   out_2937987622268780709[162] = 0;
   out_2937987622268780709[163] = 0;
   out_2937987622268780709[164] = 0;
   out_2937987622268780709[165] = 0;
   out_2937987622268780709[166] = 0;
   out_2937987622268780709[167] = 0;
   out_2937987622268780709[168] = 0;
   out_2937987622268780709[169] = 0;
   out_2937987622268780709[170] = 0;
   out_2937987622268780709[171] = 0;
   out_2937987622268780709[172] = 0;
   out_2937987622268780709[173] = 0;
   out_2937987622268780709[174] = 0;
   out_2937987622268780709[175] = 1.0;
   out_2937987622268780709[176] = 0;
   out_2937987622268780709[177] = 0;
   out_2937987622268780709[178] = 0;
   out_2937987622268780709[179] = 0;
   out_2937987622268780709[180] = 0;
   out_2937987622268780709[181] = 0;
   out_2937987622268780709[182] = 0;
   out_2937987622268780709[183] = 0;
   out_2937987622268780709[184] = 0;
   out_2937987622268780709[185] = 0;
   out_2937987622268780709[186] = 0;
   out_2937987622268780709[187] = 0;
   out_2937987622268780709[188] = 0;
   out_2937987622268780709[189] = 0;
   out_2937987622268780709[190] = 0;
   out_2937987622268780709[191] = 0;
   out_2937987622268780709[192] = 0;
   out_2937987622268780709[193] = 0;
   out_2937987622268780709[194] = 0;
   out_2937987622268780709[195] = 0;
   out_2937987622268780709[196] = 0;
   out_2937987622268780709[197] = 1.0;
   out_2937987622268780709[198] = 0;
   out_2937987622268780709[199] = 0;
   out_2937987622268780709[200] = 0;
   out_2937987622268780709[201] = 0;
   out_2937987622268780709[202] = 0;
   out_2937987622268780709[203] = 0;
   out_2937987622268780709[204] = 0;
   out_2937987622268780709[205] = 0;
   out_2937987622268780709[206] = 0;
   out_2937987622268780709[207] = 0;
   out_2937987622268780709[208] = 0;
   out_2937987622268780709[209] = 0;
   out_2937987622268780709[210] = 0;
   out_2937987622268780709[211] = 0;
   out_2937987622268780709[212] = 0;
   out_2937987622268780709[213] = 0;
   out_2937987622268780709[214] = 0;
   out_2937987622268780709[215] = 0;
   out_2937987622268780709[216] = 0;
   out_2937987622268780709[217] = 0;
   out_2937987622268780709[218] = 0;
   out_2937987622268780709[219] = 1.0;
   out_2937987622268780709[220] = 0;
   out_2937987622268780709[221] = 0;
   out_2937987622268780709[222] = 0;
   out_2937987622268780709[223] = 0;
   out_2937987622268780709[224] = 0;
   out_2937987622268780709[225] = 0;
   out_2937987622268780709[226] = 0;
   out_2937987622268780709[227] = 0;
   out_2937987622268780709[228] = 0;
   out_2937987622268780709[229] = 0;
   out_2937987622268780709[230] = 0;
   out_2937987622268780709[231] = 0;
   out_2937987622268780709[232] = 0;
   out_2937987622268780709[233] = 0;
   out_2937987622268780709[234] = 0;
   out_2937987622268780709[235] = 0;
   out_2937987622268780709[236] = 0;
   out_2937987622268780709[237] = 0;
   out_2937987622268780709[238] = 0;
   out_2937987622268780709[239] = 0;
   out_2937987622268780709[240] = 0;
   out_2937987622268780709[241] = 1.0;
   out_2937987622268780709[242] = 0;
   out_2937987622268780709[243] = 0;
   out_2937987622268780709[244] = 0;
   out_2937987622268780709[245] = 0;
   out_2937987622268780709[246] = 0;
   out_2937987622268780709[247] = 0;
   out_2937987622268780709[248] = 0;
   out_2937987622268780709[249] = 0;
   out_2937987622268780709[250] = 0;
   out_2937987622268780709[251] = 0;
   out_2937987622268780709[252] = 0;
   out_2937987622268780709[253] = 0;
   out_2937987622268780709[254] = 0;
   out_2937987622268780709[255] = 0;
   out_2937987622268780709[256] = 0;
   out_2937987622268780709[257] = 0;
   out_2937987622268780709[258] = 0;
   out_2937987622268780709[259] = 0;
   out_2937987622268780709[260] = 0;
   out_2937987622268780709[261] = 0;
   out_2937987622268780709[262] = 0;
   out_2937987622268780709[263] = 1.0;
   out_2937987622268780709[264] = 0;
   out_2937987622268780709[265] = 0;
   out_2937987622268780709[266] = 0;
   out_2937987622268780709[267] = 0;
   out_2937987622268780709[268] = 0;
   out_2937987622268780709[269] = 0;
   out_2937987622268780709[270] = 0;
   out_2937987622268780709[271] = 0;
   out_2937987622268780709[272] = 0;
   out_2937987622268780709[273] = 0;
   out_2937987622268780709[274] = 0;
   out_2937987622268780709[275] = 0;
   out_2937987622268780709[276] = 0;
   out_2937987622268780709[277] = 0;
   out_2937987622268780709[278] = 0;
   out_2937987622268780709[279] = 0;
   out_2937987622268780709[280] = 0;
   out_2937987622268780709[281] = 0;
   out_2937987622268780709[282] = 0;
   out_2937987622268780709[283] = 0;
   out_2937987622268780709[284] = 0;
   out_2937987622268780709[285] = 1.0;
   out_2937987622268780709[286] = 0;
   out_2937987622268780709[287] = 0;
   out_2937987622268780709[288] = 0;
   out_2937987622268780709[289] = 0;
   out_2937987622268780709[290] = 0;
   out_2937987622268780709[291] = 0;
   out_2937987622268780709[292] = 0;
   out_2937987622268780709[293] = 0;
   out_2937987622268780709[294] = 0;
   out_2937987622268780709[295] = 0;
   out_2937987622268780709[296] = 0;
   out_2937987622268780709[297] = 0;
   out_2937987622268780709[298] = 0;
   out_2937987622268780709[299] = 0;
   out_2937987622268780709[300] = 0;
   out_2937987622268780709[301] = 0;
   out_2937987622268780709[302] = 0;
   out_2937987622268780709[303] = 0;
   out_2937987622268780709[304] = 0;
   out_2937987622268780709[305] = 0;
   out_2937987622268780709[306] = 0;
   out_2937987622268780709[307] = 1.0;
   out_2937987622268780709[308] = 0;
   out_2937987622268780709[309] = 0;
   out_2937987622268780709[310] = 0;
   out_2937987622268780709[311] = 0;
   out_2937987622268780709[312] = 0;
   out_2937987622268780709[313] = 0;
   out_2937987622268780709[314] = 0;
   out_2937987622268780709[315] = 0;
   out_2937987622268780709[316] = 0;
   out_2937987622268780709[317] = 0;
   out_2937987622268780709[318] = 0;
   out_2937987622268780709[319] = 0;
   out_2937987622268780709[320] = 0;
   out_2937987622268780709[321] = 0;
   out_2937987622268780709[322] = 0;
   out_2937987622268780709[323] = 0;
   out_2937987622268780709[324] = 0;
   out_2937987622268780709[325] = 0;
   out_2937987622268780709[326] = 0;
   out_2937987622268780709[327] = 0;
   out_2937987622268780709[328] = 0;
   out_2937987622268780709[329] = 1.0;
   out_2937987622268780709[330] = 0;
   out_2937987622268780709[331] = 0;
   out_2937987622268780709[332] = 0;
   out_2937987622268780709[333] = 0;
   out_2937987622268780709[334] = 0;
   out_2937987622268780709[335] = 0;
   out_2937987622268780709[336] = 0;
   out_2937987622268780709[337] = 0;
   out_2937987622268780709[338] = 0;
   out_2937987622268780709[339] = 0;
   out_2937987622268780709[340] = 0;
   out_2937987622268780709[341] = 0;
   out_2937987622268780709[342] = 0;
   out_2937987622268780709[343] = 0;
   out_2937987622268780709[344] = 0;
   out_2937987622268780709[345] = 0;
   out_2937987622268780709[346] = 0;
   out_2937987622268780709[347] = 0;
   out_2937987622268780709[348] = 0;
   out_2937987622268780709[349] = 0;
   out_2937987622268780709[350] = 0;
   out_2937987622268780709[351] = 1.0;
   out_2937987622268780709[352] = 0;
   out_2937987622268780709[353] = 0;
   out_2937987622268780709[354] = 0;
   out_2937987622268780709[355] = 0;
   out_2937987622268780709[356] = 0;
   out_2937987622268780709[357] = 0;
   out_2937987622268780709[358] = 0;
   out_2937987622268780709[359] = 0;
   out_2937987622268780709[360] = 0;
   out_2937987622268780709[361] = 0;
   out_2937987622268780709[362] = 0;
   out_2937987622268780709[363] = 0;
   out_2937987622268780709[364] = 0;
   out_2937987622268780709[365] = 0;
   out_2937987622268780709[366] = 0;
   out_2937987622268780709[367] = 0;
   out_2937987622268780709[368] = 0;
   out_2937987622268780709[369] = 0;
   out_2937987622268780709[370] = 0;
   out_2937987622268780709[371] = 0;
   out_2937987622268780709[372] = 0;
   out_2937987622268780709[373] = 1.0;
   out_2937987622268780709[374] = 0;
   out_2937987622268780709[375] = 0;
   out_2937987622268780709[376] = 0;
   out_2937987622268780709[377] = 0;
   out_2937987622268780709[378] = 0;
   out_2937987622268780709[379] = 0;
   out_2937987622268780709[380] = 0;
   out_2937987622268780709[381] = 0;
   out_2937987622268780709[382] = 0;
   out_2937987622268780709[383] = 0;
   out_2937987622268780709[384] = 0;
   out_2937987622268780709[385] = 0;
   out_2937987622268780709[386] = 0;
   out_2937987622268780709[387] = 0;
   out_2937987622268780709[388] = 0;
   out_2937987622268780709[389] = 0;
   out_2937987622268780709[390] = 0;
   out_2937987622268780709[391] = 0;
   out_2937987622268780709[392] = 0;
   out_2937987622268780709[393] = 0;
   out_2937987622268780709[394] = 0;
   out_2937987622268780709[395] = 1.0;
   out_2937987622268780709[396] = 0;
   out_2937987622268780709[397] = 0;
   out_2937987622268780709[398] = 0;
   out_2937987622268780709[399] = 0;
   out_2937987622268780709[400] = 0;
   out_2937987622268780709[401] = 0;
   out_2937987622268780709[402] = 0;
   out_2937987622268780709[403] = 0;
   out_2937987622268780709[404] = 0;
   out_2937987622268780709[405] = 0;
   out_2937987622268780709[406] = 0;
   out_2937987622268780709[407] = 0;
   out_2937987622268780709[408] = 0;
   out_2937987622268780709[409] = 0;
   out_2937987622268780709[410] = 0;
   out_2937987622268780709[411] = 0;
   out_2937987622268780709[412] = 0;
   out_2937987622268780709[413] = 0;
   out_2937987622268780709[414] = 0;
   out_2937987622268780709[415] = 0;
   out_2937987622268780709[416] = 0;
   out_2937987622268780709[417] = 1.0;
   out_2937987622268780709[418] = 0;
   out_2937987622268780709[419] = 0;
   out_2937987622268780709[420] = 0;
   out_2937987622268780709[421] = 0;
   out_2937987622268780709[422] = 0;
   out_2937987622268780709[423] = 0;
   out_2937987622268780709[424] = 0;
   out_2937987622268780709[425] = 0;
   out_2937987622268780709[426] = 0;
   out_2937987622268780709[427] = 0;
   out_2937987622268780709[428] = 0;
   out_2937987622268780709[429] = 0;
   out_2937987622268780709[430] = 0;
   out_2937987622268780709[431] = 0;
   out_2937987622268780709[432] = 0;
   out_2937987622268780709[433] = 0;
   out_2937987622268780709[434] = 0;
   out_2937987622268780709[435] = 0;
   out_2937987622268780709[436] = 0;
   out_2937987622268780709[437] = 0;
   out_2937987622268780709[438] = 0;
   out_2937987622268780709[439] = 1.0;
   out_2937987622268780709[440] = 0;
   out_2937987622268780709[441] = 0;
   out_2937987622268780709[442] = 0;
   out_2937987622268780709[443] = 0;
   out_2937987622268780709[444] = 0;
   out_2937987622268780709[445] = 0;
   out_2937987622268780709[446] = 0;
   out_2937987622268780709[447] = 0;
   out_2937987622268780709[448] = 0;
   out_2937987622268780709[449] = 0;
   out_2937987622268780709[450] = 0;
   out_2937987622268780709[451] = 0;
   out_2937987622268780709[452] = 0;
   out_2937987622268780709[453] = 0;
   out_2937987622268780709[454] = 0;
   out_2937987622268780709[455] = 0;
   out_2937987622268780709[456] = 0;
   out_2937987622268780709[457] = 0;
   out_2937987622268780709[458] = 0;
   out_2937987622268780709[459] = 0;
   out_2937987622268780709[460] = 0;
   out_2937987622268780709[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4615445404091588944) {
   out_4615445404091588944[0] = dt*state[7] + state[0];
   out_4615445404091588944[1] = dt*state[8] + state[1];
   out_4615445404091588944[2] = dt*state[9] + state[2];
   out_4615445404091588944[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4615445404091588944[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4615445404091588944[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4615445404091588944[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4615445404091588944[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4615445404091588944[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4615445404091588944[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4615445404091588944[10] = state[10];
   out_4615445404091588944[11] = state[11];
   out_4615445404091588944[12] = state[12];
   out_4615445404091588944[13] = state[13];
   out_4615445404091588944[14] = state[14];
   out_4615445404091588944[15] = state[15];
   out_4615445404091588944[16] = state[16];
   out_4615445404091588944[17] = state[17];
   out_4615445404091588944[18] = state[18];
   out_4615445404091588944[19] = state[19];
   out_4615445404091588944[20] = state[20];
   out_4615445404091588944[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1120091521351388821) {
   out_1120091521351388821[0] = 1;
   out_1120091521351388821[1] = 0;
   out_1120091521351388821[2] = 0;
   out_1120091521351388821[3] = 0;
   out_1120091521351388821[4] = 0;
   out_1120091521351388821[5] = 0;
   out_1120091521351388821[6] = dt;
   out_1120091521351388821[7] = 0;
   out_1120091521351388821[8] = 0;
   out_1120091521351388821[9] = 0;
   out_1120091521351388821[10] = 0;
   out_1120091521351388821[11] = 0;
   out_1120091521351388821[12] = 0;
   out_1120091521351388821[13] = 0;
   out_1120091521351388821[14] = 0;
   out_1120091521351388821[15] = 0;
   out_1120091521351388821[16] = 0;
   out_1120091521351388821[17] = 0;
   out_1120091521351388821[18] = 0;
   out_1120091521351388821[19] = 0;
   out_1120091521351388821[20] = 0;
   out_1120091521351388821[21] = 0;
   out_1120091521351388821[22] = 1;
   out_1120091521351388821[23] = 0;
   out_1120091521351388821[24] = 0;
   out_1120091521351388821[25] = 0;
   out_1120091521351388821[26] = 0;
   out_1120091521351388821[27] = 0;
   out_1120091521351388821[28] = dt;
   out_1120091521351388821[29] = 0;
   out_1120091521351388821[30] = 0;
   out_1120091521351388821[31] = 0;
   out_1120091521351388821[32] = 0;
   out_1120091521351388821[33] = 0;
   out_1120091521351388821[34] = 0;
   out_1120091521351388821[35] = 0;
   out_1120091521351388821[36] = 0;
   out_1120091521351388821[37] = 0;
   out_1120091521351388821[38] = 0;
   out_1120091521351388821[39] = 0;
   out_1120091521351388821[40] = 0;
   out_1120091521351388821[41] = 0;
   out_1120091521351388821[42] = 0;
   out_1120091521351388821[43] = 0;
   out_1120091521351388821[44] = 1;
   out_1120091521351388821[45] = 0;
   out_1120091521351388821[46] = 0;
   out_1120091521351388821[47] = 0;
   out_1120091521351388821[48] = 0;
   out_1120091521351388821[49] = 0;
   out_1120091521351388821[50] = dt;
   out_1120091521351388821[51] = 0;
   out_1120091521351388821[52] = 0;
   out_1120091521351388821[53] = 0;
   out_1120091521351388821[54] = 0;
   out_1120091521351388821[55] = 0;
   out_1120091521351388821[56] = 0;
   out_1120091521351388821[57] = 0;
   out_1120091521351388821[58] = 0;
   out_1120091521351388821[59] = 0;
   out_1120091521351388821[60] = 0;
   out_1120091521351388821[61] = 0;
   out_1120091521351388821[62] = 0;
   out_1120091521351388821[63] = 0;
   out_1120091521351388821[64] = 0;
   out_1120091521351388821[65] = 0;
   out_1120091521351388821[66] = 1;
   out_1120091521351388821[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1120091521351388821[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1120091521351388821[69] = 0;
   out_1120091521351388821[70] = 0;
   out_1120091521351388821[71] = 0;
   out_1120091521351388821[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1120091521351388821[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1120091521351388821[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1120091521351388821[75] = 0;
   out_1120091521351388821[76] = 0;
   out_1120091521351388821[77] = 0;
   out_1120091521351388821[78] = 0;
   out_1120091521351388821[79] = 0;
   out_1120091521351388821[80] = 0;
   out_1120091521351388821[81] = 0;
   out_1120091521351388821[82] = 0;
   out_1120091521351388821[83] = 0;
   out_1120091521351388821[84] = 0;
   out_1120091521351388821[85] = 0;
   out_1120091521351388821[86] = 0;
   out_1120091521351388821[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1120091521351388821[88] = 1;
   out_1120091521351388821[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1120091521351388821[90] = 0;
   out_1120091521351388821[91] = 0;
   out_1120091521351388821[92] = 0;
   out_1120091521351388821[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1120091521351388821[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1120091521351388821[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1120091521351388821[96] = 0;
   out_1120091521351388821[97] = 0;
   out_1120091521351388821[98] = 0;
   out_1120091521351388821[99] = 0;
   out_1120091521351388821[100] = 0;
   out_1120091521351388821[101] = 0;
   out_1120091521351388821[102] = 0;
   out_1120091521351388821[103] = 0;
   out_1120091521351388821[104] = 0;
   out_1120091521351388821[105] = 0;
   out_1120091521351388821[106] = 0;
   out_1120091521351388821[107] = 0;
   out_1120091521351388821[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1120091521351388821[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1120091521351388821[110] = 1;
   out_1120091521351388821[111] = 0;
   out_1120091521351388821[112] = 0;
   out_1120091521351388821[113] = 0;
   out_1120091521351388821[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1120091521351388821[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1120091521351388821[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1120091521351388821[117] = 0;
   out_1120091521351388821[118] = 0;
   out_1120091521351388821[119] = 0;
   out_1120091521351388821[120] = 0;
   out_1120091521351388821[121] = 0;
   out_1120091521351388821[122] = 0;
   out_1120091521351388821[123] = 0;
   out_1120091521351388821[124] = 0;
   out_1120091521351388821[125] = 0;
   out_1120091521351388821[126] = 0;
   out_1120091521351388821[127] = 0;
   out_1120091521351388821[128] = 0;
   out_1120091521351388821[129] = 0;
   out_1120091521351388821[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1120091521351388821[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1120091521351388821[132] = 1;
   out_1120091521351388821[133] = 0;
   out_1120091521351388821[134] = 0;
   out_1120091521351388821[135] = 0;
   out_1120091521351388821[136] = 0;
   out_1120091521351388821[137] = 0;
   out_1120091521351388821[138] = 0;
   out_1120091521351388821[139] = 0;
   out_1120091521351388821[140] = 0;
   out_1120091521351388821[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1120091521351388821[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1120091521351388821[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1120091521351388821[144] = 0;
   out_1120091521351388821[145] = 0;
   out_1120091521351388821[146] = 0;
   out_1120091521351388821[147] = 0;
   out_1120091521351388821[148] = 0;
   out_1120091521351388821[149] = 0;
   out_1120091521351388821[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1120091521351388821[151] = 0;
   out_1120091521351388821[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1120091521351388821[153] = 0;
   out_1120091521351388821[154] = 1;
   out_1120091521351388821[155] = 0;
   out_1120091521351388821[156] = 0;
   out_1120091521351388821[157] = 0;
   out_1120091521351388821[158] = 0;
   out_1120091521351388821[159] = 0;
   out_1120091521351388821[160] = 0;
   out_1120091521351388821[161] = 0;
   out_1120091521351388821[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1120091521351388821[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1120091521351388821[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1120091521351388821[165] = 0;
   out_1120091521351388821[166] = 0;
   out_1120091521351388821[167] = 0;
   out_1120091521351388821[168] = 0;
   out_1120091521351388821[169] = 0;
   out_1120091521351388821[170] = 0;
   out_1120091521351388821[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1120091521351388821[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1120091521351388821[173] = 0;
   out_1120091521351388821[174] = 0;
   out_1120091521351388821[175] = 0;
   out_1120091521351388821[176] = 1;
   out_1120091521351388821[177] = 0;
   out_1120091521351388821[178] = 0;
   out_1120091521351388821[179] = 0;
   out_1120091521351388821[180] = 0;
   out_1120091521351388821[181] = 0;
   out_1120091521351388821[182] = 0;
   out_1120091521351388821[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1120091521351388821[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1120091521351388821[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1120091521351388821[186] = 0;
   out_1120091521351388821[187] = 0;
   out_1120091521351388821[188] = 0;
   out_1120091521351388821[189] = 0;
   out_1120091521351388821[190] = 0;
   out_1120091521351388821[191] = 0;
   out_1120091521351388821[192] = 0;
   out_1120091521351388821[193] = 0;
   out_1120091521351388821[194] = 0;
   out_1120091521351388821[195] = 0;
   out_1120091521351388821[196] = 0;
   out_1120091521351388821[197] = 0;
   out_1120091521351388821[198] = 1;
   out_1120091521351388821[199] = 0;
   out_1120091521351388821[200] = 0;
   out_1120091521351388821[201] = 0;
   out_1120091521351388821[202] = 0;
   out_1120091521351388821[203] = 0;
   out_1120091521351388821[204] = 0;
   out_1120091521351388821[205] = 0;
   out_1120091521351388821[206] = 0;
   out_1120091521351388821[207] = 0;
   out_1120091521351388821[208] = 0;
   out_1120091521351388821[209] = 0;
   out_1120091521351388821[210] = 0;
   out_1120091521351388821[211] = 0;
   out_1120091521351388821[212] = 0;
   out_1120091521351388821[213] = 0;
   out_1120091521351388821[214] = 0;
   out_1120091521351388821[215] = 0;
   out_1120091521351388821[216] = 0;
   out_1120091521351388821[217] = 0;
   out_1120091521351388821[218] = 0;
   out_1120091521351388821[219] = 0;
   out_1120091521351388821[220] = 1;
   out_1120091521351388821[221] = 0;
   out_1120091521351388821[222] = 0;
   out_1120091521351388821[223] = 0;
   out_1120091521351388821[224] = 0;
   out_1120091521351388821[225] = 0;
   out_1120091521351388821[226] = 0;
   out_1120091521351388821[227] = 0;
   out_1120091521351388821[228] = 0;
   out_1120091521351388821[229] = 0;
   out_1120091521351388821[230] = 0;
   out_1120091521351388821[231] = 0;
   out_1120091521351388821[232] = 0;
   out_1120091521351388821[233] = 0;
   out_1120091521351388821[234] = 0;
   out_1120091521351388821[235] = 0;
   out_1120091521351388821[236] = 0;
   out_1120091521351388821[237] = 0;
   out_1120091521351388821[238] = 0;
   out_1120091521351388821[239] = 0;
   out_1120091521351388821[240] = 0;
   out_1120091521351388821[241] = 0;
   out_1120091521351388821[242] = 1;
   out_1120091521351388821[243] = 0;
   out_1120091521351388821[244] = 0;
   out_1120091521351388821[245] = 0;
   out_1120091521351388821[246] = 0;
   out_1120091521351388821[247] = 0;
   out_1120091521351388821[248] = 0;
   out_1120091521351388821[249] = 0;
   out_1120091521351388821[250] = 0;
   out_1120091521351388821[251] = 0;
   out_1120091521351388821[252] = 0;
   out_1120091521351388821[253] = 0;
   out_1120091521351388821[254] = 0;
   out_1120091521351388821[255] = 0;
   out_1120091521351388821[256] = 0;
   out_1120091521351388821[257] = 0;
   out_1120091521351388821[258] = 0;
   out_1120091521351388821[259] = 0;
   out_1120091521351388821[260] = 0;
   out_1120091521351388821[261] = 0;
   out_1120091521351388821[262] = 0;
   out_1120091521351388821[263] = 0;
   out_1120091521351388821[264] = 1;
   out_1120091521351388821[265] = 0;
   out_1120091521351388821[266] = 0;
   out_1120091521351388821[267] = 0;
   out_1120091521351388821[268] = 0;
   out_1120091521351388821[269] = 0;
   out_1120091521351388821[270] = 0;
   out_1120091521351388821[271] = 0;
   out_1120091521351388821[272] = 0;
   out_1120091521351388821[273] = 0;
   out_1120091521351388821[274] = 0;
   out_1120091521351388821[275] = 0;
   out_1120091521351388821[276] = 0;
   out_1120091521351388821[277] = 0;
   out_1120091521351388821[278] = 0;
   out_1120091521351388821[279] = 0;
   out_1120091521351388821[280] = 0;
   out_1120091521351388821[281] = 0;
   out_1120091521351388821[282] = 0;
   out_1120091521351388821[283] = 0;
   out_1120091521351388821[284] = 0;
   out_1120091521351388821[285] = 0;
   out_1120091521351388821[286] = 1;
   out_1120091521351388821[287] = 0;
   out_1120091521351388821[288] = 0;
   out_1120091521351388821[289] = 0;
   out_1120091521351388821[290] = 0;
   out_1120091521351388821[291] = 0;
   out_1120091521351388821[292] = 0;
   out_1120091521351388821[293] = 0;
   out_1120091521351388821[294] = 0;
   out_1120091521351388821[295] = 0;
   out_1120091521351388821[296] = 0;
   out_1120091521351388821[297] = 0;
   out_1120091521351388821[298] = 0;
   out_1120091521351388821[299] = 0;
   out_1120091521351388821[300] = 0;
   out_1120091521351388821[301] = 0;
   out_1120091521351388821[302] = 0;
   out_1120091521351388821[303] = 0;
   out_1120091521351388821[304] = 0;
   out_1120091521351388821[305] = 0;
   out_1120091521351388821[306] = 0;
   out_1120091521351388821[307] = 0;
   out_1120091521351388821[308] = 1;
   out_1120091521351388821[309] = 0;
   out_1120091521351388821[310] = 0;
   out_1120091521351388821[311] = 0;
   out_1120091521351388821[312] = 0;
   out_1120091521351388821[313] = 0;
   out_1120091521351388821[314] = 0;
   out_1120091521351388821[315] = 0;
   out_1120091521351388821[316] = 0;
   out_1120091521351388821[317] = 0;
   out_1120091521351388821[318] = 0;
   out_1120091521351388821[319] = 0;
   out_1120091521351388821[320] = 0;
   out_1120091521351388821[321] = 0;
   out_1120091521351388821[322] = 0;
   out_1120091521351388821[323] = 0;
   out_1120091521351388821[324] = 0;
   out_1120091521351388821[325] = 0;
   out_1120091521351388821[326] = 0;
   out_1120091521351388821[327] = 0;
   out_1120091521351388821[328] = 0;
   out_1120091521351388821[329] = 0;
   out_1120091521351388821[330] = 1;
   out_1120091521351388821[331] = 0;
   out_1120091521351388821[332] = 0;
   out_1120091521351388821[333] = 0;
   out_1120091521351388821[334] = 0;
   out_1120091521351388821[335] = 0;
   out_1120091521351388821[336] = 0;
   out_1120091521351388821[337] = 0;
   out_1120091521351388821[338] = 0;
   out_1120091521351388821[339] = 0;
   out_1120091521351388821[340] = 0;
   out_1120091521351388821[341] = 0;
   out_1120091521351388821[342] = 0;
   out_1120091521351388821[343] = 0;
   out_1120091521351388821[344] = 0;
   out_1120091521351388821[345] = 0;
   out_1120091521351388821[346] = 0;
   out_1120091521351388821[347] = 0;
   out_1120091521351388821[348] = 0;
   out_1120091521351388821[349] = 0;
   out_1120091521351388821[350] = 0;
   out_1120091521351388821[351] = 0;
   out_1120091521351388821[352] = 1;
   out_1120091521351388821[353] = 0;
   out_1120091521351388821[354] = 0;
   out_1120091521351388821[355] = 0;
   out_1120091521351388821[356] = 0;
   out_1120091521351388821[357] = 0;
   out_1120091521351388821[358] = 0;
   out_1120091521351388821[359] = 0;
   out_1120091521351388821[360] = 0;
   out_1120091521351388821[361] = 0;
   out_1120091521351388821[362] = 0;
   out_1120091521351388821[363] = 0;
   out_1120091521351388821[364] = 0;
   out_1120091521351388821[365] = 0;
   out_1120091521351388821[366] = 0;
   out_1120091521351388821[367] = 0;
   out_1120091521351388821[368] = 0;
   out_1120091521351388821[369] = 0;
   out_1120091521351388821[370] = 0;
   out_1120091521351388821[371] = 0;
   out_1120091521351388821[372] = 0;
   out_1120091521351388821[373] = 0;
   out_1120091521351388821[374] = 1;
   out_1120091521351388821[375] = 0;
   out_1120091521351388821[376] = 0;
   out_1120091521351388821[377] = 0;
   out_1120091521351388821[378] = 0;
   out_1120091521351388821[379] = 0;
   out_1120091521351388821[380] = 0;
   out_1120091521351388821[381] = 0;
   out_1120091521351388821[382] = 0;
   out_1120091521351388821[383] = 0;
   out_1120091521351388821[384] = 0;
   out_1120091521351388821[385] = 0;
   out_1120091521351388821[386] = 0;
   out_1120091521351388821[387] = 0;
   out_1120091521351388821[388] = 0;
   out_1120091521351388821[389] = 0;
   out_1120091521351388821[390] = 0;
   out_1120091521351388821[391] = 0;
   out_1120091521351388821[392] = 0;
   out_1120091521351388821[393] = 0;
   out_1120091521351388821[394] = 0;
   out_1120091521351388821[395] = 0;
   out_1120091521351388821[396] = 1;
   out_1120091521351388821[397] = 0;
   out_1120091521351388821[398] = 0;
   out_1120091521351388821[399] = 0;
   out_1120091521351388821[400] = 0;
   out_1120091521351388821[401] = 0;
   out_1120091521351388821[402] = 0;
   out_1120091521351388821[403] = 0;
   out_1120091521351388821[404] = 0;
   out_1120091521351388821[405] = 0;
   out_1120091521351388821[406] = 0;
   out_1120091521351388821[407] = 0;
   out_1120091521351388821[408] = 0;
   out_1120091521351388821[409] = 0;
   out_1120091521351388821[410] = 0;
   out_1120091521351388821[411] = 0;
   out_1120091521351388821[412] = 0;
   out_1120091521351388821[413] = 0;
   out_1120091521351388821[414] = 0;
   out_1120091521351388821[415] = 0;
   out_1120091521351388821[416] = 0;
   out_1120091521351388821[417] = 0;
   out_1120091521351388821[418] = 1;
   out_1120091521351388821[419] = 0;
   out_1120091521351388821[420] = 0;
   out_1120091521351388821[421] = 0;
   out_1120091521351388821[422] = 0;
   out_1120091521351388821[423] = 0;
   out_1120091521351388821[424] = 0;
   out_1120091521351388821[425] = 0;
   out_1120091521351388821[426] = 0;
   out_1120091521351388821[427] = 0;
   out_1120091521351388821[428] = 0;
   out_1120091521351388821[429] = 0;
   out_1120091521351388821[430] = 0;
   out_1120091521351388821[431] = 0;
   out_1120091521351388821[432] = 0;
   out_1120091521351388821[433] = 0;
   out_1120091521351388821[434] = 0;
   out_1120091521351388821[435] = 0;
   out_1120091521351388821[436] = 0;
   out_1120091521351388821[437] = 0;
   out_1120091521351388821[438] = 0;
   out_1120091521351388821[439] = 0;
   out_1120091521351388821[440] = 1;
}
void h_4(double *state, double *unused, double *out_2921641620890039986) {
   out_2921641620890039986[0] = state[10] + state[13];
   out_2921641620890039986[1] = state[11] + state[14];
   out_2921641620890039986[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6386686942332723458) {
   out_6386686942332723458[0] = 0;
   out_6386686942332723458[1] = 0;
   out_6386686942332723458[2] = 0;
   out_6386686942332723458[3] = 0;
   out_6386686942332723458[4] = 0;
   out_6386686942332723458[5] = 0;
   out_6386686942332723458[6] = 0;
   out_6386686942332723458[7] = 0;
   out_6386686942332723458[8] = 0;
   out_6386686942332723458[9] = 0;
   out_6386686942332723458[10] = 1;
   out_6386686942332723458[11] = 0;
   out_6386686942332723458[12] = 0;
   out_6386686942332723458[13] = 1;
   out_6386686942332723458[14] = 0;
   out_6386686942332723458[15] = 0;
   out_6386686942332723458[16] = 0;
   out_6386686942332723458[17] = 0;
   out_6386686942332723458[18] = 0;
   out_6386686942332723458[19] = 0;
   out_6386686942332723458[20] = 0;
   out_6386686942332723458[21] = 0;
   out_6386686942332723458[22] = 0;
   out_6386686942332723458[23] = 0;
   out_6386686942332723458[24] = 0;
   out_6386686942332723458[25] = 0;
   out_6386686942332723458[26] = 0;
   out_6386686942332723458[27] = 0;
   out_6386686942332723458[28] = 0;
   out_6386686942332723458[29] = 0;
   out_6386686942332723458[30] = 0;
   out_6386686942332723458[31] = 0;
   out_6386686942332723458[32] = 0;
   out_6386686942332723458[33] = 1;
   out_6386686942332723458[34] = 0;
   out_6386686942332723458[35] = 0;
   out_6386686942332723458[36] = 1;
   out_6386686942332723458[37] = 0;
   out_6386686942332723458[38] = 0;
   out_6386686942332723458[39] = 0;
   out_6386686942332723458[40] = 0;
   out_6386686942332723458[41] = 0;
   out_6386686942332723458[42] = 0;
   out_6386686942332723458[43] = 0;
   out_6386686942332723458[44] = 0;
   out_6386686942332723458[45] = 0;
   out_6386686942332723458[46] = 0;
   out_6386686942332723458[47] = 0;
   out_6386686942332723458[48] = 0;
   out_6386686942332723458[49] = 0;
   out_6386686942332723458[50] = 0;
   out_6386686942332723458[51] = 0;
   out_6386686942332723458[52] = 0;
   out_6386686942332723458[53] = 0;
   out_6386686942332723458[54] = 0;
   out_6386686942332723458[55] = 0;
   out_6386686942332723458[56] = 1;
   out_6386686942332723458[57] = 0;
   out_6386686942332723458[58] = 0;
   out_6386686942332723458[59] = 1;
   out_6386686942332723458[60] = 0;
   out_6386686942332723458[61] = 0;
   out_6386686942332723458[62] = 0;
   out_6386686942332723458[63] = 0;
   out_6386686942332723458[64] = 0;
   out_6386686942332723458[65] = 0;
}
void h_9(double *state, double *unused, double *out_3756012193049619054) {
   out_3756012193049619054[0] = state[10];
   out_3756012193049619054[1] = state[11];
   out_3756012193049619054[2] = state[12];
}
void H_9(double *state, double *unused, double *out_900531992931724012) {
   out_900531992931724012[0] = 0;
   out_900531992931724012[1] = 0;
   out_900531992931724012[2] = 0;
   out_900531992931724012[3] = 0;
   out_900531992931724012[4] = 0;
   out_900531992931724012[5] = 0;
   out_900531992931724012[6] = 0;
   out_900531992931724012[7] = 0;
   out_900531992931724012[8] = 0;
   out_900531992931724012[9] = 0;
   out_900531992931724012[10] = 1;
   out_900531992931724012[11] = 0;
   out_900531992931724012[12] = 0;
   out_900531992931724012[13] = 0;
   out_900531992931724012[14] = 0;
   out_900531992931724012[15] = 0;
   out_900531992931724012[16] = 0;
   out_900531992931724012[17] = 0;
   out_900531992931724012[18] = 0;
   out_900531992931724012[19] = 0;
   out_900531992931724012[20] = 0;
   out_900531992931724012[21] = 0;
   out_900531992931724012[22] = 0;
   out_900531992931724012[23] = 0;
   out_900531992931724012[24] = 0;
   out_900531992931724012[25] = 0;
   out_900531992931724012[26] = 0;
   out_900531992931724012[27] = 0;
   out_900531992931724012[28] = 0;
   out_900531992931724012[29] = 0;
   out_900531992931724012[30] = 0;
   out_900531992931724012[31] = 0;
   out_900531992931724012[32] = 0;
   out_900531992931724012[33] = 1;
   out_900531992931724012[34] = 0;
   out_900531992931724012[35] = 0;
   out_900531992931724012[36] = 0;
   out_900531992931724012[37] = 0;
   out_900531992931724012[38] = 0;
   out_900531992931724012[39] = 0;
   out_900531992931724012[40] = 0;
   out_900531992931724012[41] = 0;
   out_900531992931724012[42] = 0;
   out_900531992931724012[43] = 0;
   out_900531992931724012[44] = 0;
   out_900531992931724012[45] = 0;
   out_900531992931724012[46] = 0;
   out_900531992931724012[47] = 0;
   out_900531992931724012[48] = 0;
   out_900531992931724012[49] = 0;
   out_900531992931724012[50] = 0;
   out_900531992931724012[51] = 0;
   out_900531992931724012[52] = 0;
   out_900531992931724012[53] = 0;
   out_900531992931724012[54] = 0;
   out_900531992931724012[55] = 0;
   out_900531992931724012[56] = 1;
   out_900531992931724012[57] = 0;
   out_900531992931724012[58] = 0;
   out_900531992931724012[59] = 0;
   out_900531992931724012[60] = 0;
   out_900531992931724012[61] = 0;
   out_900531992931724012[62] = 0;
   out_900531992931724012[63] = 0;
   out_900531992931724012[64] = 0;
   out_900531992931724012[65] = 0;
}
void h_10(double *state, double *unused, double *out_1854846109295052328) {
   out_1854846109295052328[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1854846109295052328[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1854846109295052328[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7074881526148492092) {
   out_7074881526148492092[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7074881526148492092[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7074881526148492092[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7074881526148492092[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7074881526148492092[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7074881526148492092[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7074881526148492092[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7074881526148492092[7] = 0;
   out_7074881526148492092[8] = 0;
   out_7074881526148492092[9] = 0;
   out_7074881526148492092[10] = 0;
   out_7074881526148492092[11] = 0;
   out_7074881526148492092[12] = 0;
   out_7074881526148492092[13] = 0;
   out_7074881526148492092[14] = 0;
   out_7074881526148492092[15] = 0;
   out_7074881526148492092[16] = 1;
   out_7074881526148492092[17] = 0;
   out_7074881526148492092[18] = 0;
   out_7074881526148492092[19] = 1;
   out_7074881526148492092[20] = 0;
   out_7074881526148492092[21] = 0;
   out_7074881526148492092[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7074881526148492092[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7074881526148492092[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7074881526148492092[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7074881526148492092[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7074881526148492092[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7074881526148492092[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7074881526148492092[29] = 0;
   out_7074881526148492092[30] = 0;
   out_7074881526148492092[31] = 0;
   out_7074881526148492092[32] = 0;
   out_7074881526148492092[33] = 0;
   out_7074881526148492092[34] = 0;
   out_7074881526148492092[35] = 0;
   out_7074881526148492092[36] = 0;
   out_7074881526148492092[37] = 0;
   out_7074881526148492092[38] = 0;
   out_7074881526148492092[39] = 1;
   out_7074881526148492092[40] = 0;
   out_7074881526148492092[41] = 0;
   out_7074881526148492092[42] = 1;
   out_7074881526148492092[43] = 0;
   out_7074881526148492092[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7074881526148492092[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7074881526148492092[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7074881526148492092[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7074881526148492092[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7074881526148492092[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7074881526148492092[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7074881526148492092[51] = 0;
   out_7074881526148492092[52] = 0;
   out_7074881526148492092[53] = 0;
   out_7074881526148492092[54] = 0;
   out_7074881526148492092[55] = 0;
   out_7074881526148492092[56] = 0;
   out_7074881526148492092[57] = 0;
   out_7074881526148492092[58] = 0;
   out_7074881526148492092[59] = 0;
   out_7074881526148492092[60] = 0;
   out_7074881526148492092[61] = 0;
   out_7074881526148492092[62] = 1;
   out_7074881526148492092[63] = 0;
   out_7074881526148492092[64] = 0;
   out_7074881526148492092[65] = 1;
}
void h_12(double *state, double *unused, double *out_3945832473763671516) {
   out_3945832473763671516[0] = state[0];
   out_3945832473763671516[1] = state[1];
   out_3945832473763671516[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1367230534300761663) {
   out_1367230534300761663[0] = 1;
   out_1367230534300761663[1] = 0;
   out_1367230534300761663[2] = 0;
   out_1367230534300761663[3] = 0;
   out_1367230534300761663[4] = 0;
   out_1367230534300761663[5] = 0;
   out_1367230534300761663[6] = 0;
   out_1367230534300761663[7] = 0;
   out_1367230534300761663[8] = 0;
   out_1367230534300761663[9] = 0;
   out_1367230534300761663[10] = 0;
   out_1367230534300761663[11] = 0;
   out_1367230534300761663[12] = 0;
   out_1367230534300761663[13] = 0;
   out_1367230534300761663[14] = 0;
   out_1367230534300761663[15] = 0;
   out_1367230534300761663[16] = 0;
   out_1367230534300761663[17] = 0;
   out_1367230534300761663[18] = 0;
   out_1367230534300761663[19] = 0;
   out_1367230534300761663[20] = 0;
   out_1367230534300761663[21] = 0;
   out_1367230534300761663[22] = 0;
   out_1367230534300761663[23] = 1;
   out_1367230534300761663[24] = 0;
   out_1367230534300761663[25] = 0;
   out_1367230534300761663[26] = 0;
   out_1367230534300761663[27] = 0;
   out_1367230534300761663[28] = 0;
   out_1367230534300761663[29] = 0;
   out_1367230534300761663[30] = 0;
   out_1367230534300761663[31] = 0;
   out_1367230534300761663[32] = 0;
   out_1367230534300761663[33] = 0;
   out_1367230534300761663[34] = 0;
   out_1367230534300761663[35] = 0;
   out_1367230534300761663[36] = 0;
   out_1367230534300761663[37] = 0;
   out_1367230534300761663[38] = 0;
   out_1367230534300761663[39] = 0;
   out_1367230534300761663[40] = 0;
   out_1367230534300761663[41] = 0;
   out_1367230534300761663[42] = 0;
   out_1367230534300761663[43] = 0;
   out_1367230534300761663[44] = 0;
   out_1367230534300761663[45] = 0;
   out_1367230534300761663[46] = 1;
   out_1367230534300761663[47] = 0;
   out_1367230534300761663[48] = 0;
   out_1367230534300761663[49] = 0;
   out_1367230534300761663[50] = 0;
   out_1367230534300761663[51] = 0;
   out_1367230534300761663[52] = 0;
   out_1367230534300761663[53] = 0;
   out_1367230534300761663[54] = 0;
   out_1367230534300761663[55] = 0;
   out_1367230534300761663[56] = 0;
   out_1367230534300761663[57] = 0;
   out_1367230534300761663[58] = 0;
   out_1367230534300761663[59] = 0;
   out_1367230534300761663[60] = 0;
   out_1367230534300761663[61] = 0;
   out_1367230534300761663[62] = 0;
   out_1367230534300761663[63] = 0;
   out_1367230534300761663[64] = 0;
   out_1367230534300761663[65] = 0;
}
void h_35(double *state, double *unused, double *out_6054195810410085163) {
   out_6054195810410085163[0] = state[7];
   out_6054195810410085163[1] = state[8];
   out_6054195810410085163[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1378332498024252046) {
   out_1378332498024252046[0] = 0;
   out_1378332498024252046[1] = 0;
   out_1378332498024252046[2] = 0;
   out_1378332498024252046[3] = 0;
   out_1378332498024252046[4] = 0;
   out_1378332498024252046[5] = 0;
   out_1378332498024252046[6] = 0;
   out_1378332498024252046[7] = 1;
   out_1378332498024252046[8] = 0;
   out_1378332498024252046[9] = 0;
   out_1378332498024252046[10] = 0;
   out_1378332498024252046[11] = 0;
   out_1378332498024252046[12] = 0;
   out_1378332498024252046[13] = 0;
   out_1378332498024252046[14] = 0;
   out_1378332498024252046[15] = 0;
   out_1378332498024252046[16] = 0;
   out_1378332498024252046[17] = 0;
   out_1378332498024252046[18] = 0;
   out_1378332498024252046[19] = 0;
   out_1378332498024252046[20] = 0;
   out_1378332498024252046[21] = 0;
   out_1378332498024252046[22] = 0;
   out_1378332498024252046[23] = 0;
   out_1378332498024252046[24] = 0;
   out_1378332498024252046[25] = 0;
   out_1378332498024252046[26] = 0;
   out_1378332498024252046[27] = 0;
   out_1378332498024252046[28] = 0;
   out_1378332498024252046[29] = 0;
   out_1378332498024252046[30] = 1;
   out_1378332498024252046[31] = 0;
   out_1378332498024252046[32] = 0;
   out_1378332498024252046[33] = 0;
   out_1378332498024252046[34] = 0;
   out_1378332498024252046[35] = 0;
   out_1378332498024252046[36] = 0;
   out_1378332498024252046[37] = 0;
   out_1378332498024252046[38] = 0;
   out_1378332498024252046[39] = 0;
   out_1378332498024252046[40] = 0;
   out_1378332498024252046[41] = 0;
   out_1378332498024252046[42] = 0;
   out_1378332498024252046[43] = 0;
   out_1378332498024252046[44] = 0;
   out_1378332498024252046[45] = 0;
   out_1378332498024252046[46] = 0;
   out_1378332498024252046[47] = 0;
   out_1378332498024252046[48] = 0;
   out_1378332498024252046[49] = 0;
   out_1378332498024252046[50] = 0;
   out_1378332498024252046[51] = 0;
   out_1378332498024252046[52] = 0;
   out_1378332498024252046[53] = 1;
   out_1378332498024252046[54] = 0;
   out_1378332498024252046[55] = 0;
   out_1378332498024252046[56] = 0;
   out_1378332498024252046[57] = 0;
   out_1378332498024252046[58] = 0;
   out_1378332498024252046[59] = 0;
   out_1378332498024252046[60] = 0;
   out_1378332498024252046[61] = 0;
   out_1378332498024252046[62] = 0;
   out_1378332498024252046[63] = 0;
   out_1378332498024252046[64] = 0;
   out_1378332498024252046[65] = 0;
}
void h_32(double *state, double *unused, double *out_6543260540981204956) {
   out_6543260540981204956[0] = state[3];
   out_6543260540981204956[1] = state[4];
   out_6543260540981204956[2] = state[5];
   out_6543260540981204956[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5093826771868110853) {
   out_5093826771868110853[0] = 0;
   out_5093826771868110853[1] = 0;
   out_5093826771868110853[2] = 0;
   out_5093826771868110853[3] = 1;
   out_5093826771868110853[4] = 0;
   out_5093826771868110853[5] = 0;
   out_5093826771868110853[6] = 0;
   out_5093826771868110853[7] = 0;
   out_5093826771868110853[8] = 0;
   out_5093826771868110853[9] = 0;
   out_5093826771868110853[10] = 0;
   out_5093826771868110853[11] = 0;
   out_5093826771868110853[12] = 0;
   out_5093826771868110853[13] = 0;
   out_5093826771868110853[14] = 0;
   out_5093826771868110853[15] = 0;
   out_5093826771868110853[16] = 0;
   out_5093826771868110853[17] = 0;
   out_5093826771868110853[18] = 0;
   out_5093826771868110853[19] = 0;
   out_5093826771868110853[20] = 0;
   out_5093826771868110853[21] = 0;
   out_5093826771868110853[22] = 0;
   out_5093826771868110853[23] = 0;
   out_5093826771868110853[24] = 0;
   out_5093826771868110853[25] = 0;
   out_5093826771868110853[26] = 1;
   out_5093826771868110853[27] = 0;
   out_5093826771868110853[28] = 0;
   out_5093826771868110853[29] = 0;
   out_5093826771868110853[30] = 0;
   out_5093826771868110853[31] = 0;
   out_5093826771868110853[32] = 0;
   out_5093826771868110853[33] = 0;
   out_5093826771868110853[34] = 0;
   out_5093826771868110853[35] = 0;
   out_5093826771868110853[36] = 0;
   out_5093826771868110853[37] = 0;
   out_5093826771868110853[38] = 0;
   out_5093826771868110853[39] = 0;
   out_5093826771868110853[40] = 0;
   out_5093826771868110853[41] = 0;
   out_5093826771868110853[42] = 0;
   out_5093826771868110853[43] = 0;
   out_5093826771868110853[44] = 0;
   out_5093826771868110853[45] = 0;
   out_5093826771868110853[46] = 0;
   out_5093826771868110853[47] = 0;
   out_5093826771868110853[48] = 0;
   out_5093826771868110853[49] = 1;
   out_5093826771868110853[50] = 0;
   out_5093826771868110853[51] = 0;
   out_5093826771868110853[52] = 0;
   out_5093826771868110853[53] = 0;
   out_5093826771868110853[54] = 0;
   out_5093826771868110853[55] = 0;
   out_5093826771868110853[56] = 0;
   out_5093826771868110853[57] = 0;
   out_5093826771868110853[58] = 0;
   out_5093826771868110853[59] = 0;
   out_5093826771868110853[60] = 0;
   out_5093826771868110853[61] = 0;
   out_5093826771868110853[62] = 0;
   out_5093826771868110853[63] = 0;
   out_5093826771868110853[64] = 0;
   out_5093826771868110853[65] = 0;
   out_5093826771868110853[66] = 0;
   out_5093826771868110853[67] = 0;
   out_5093826771868110853[68] = 0;
   out_5093826771868110853[69] = 0;
   out_5093826771868110853[70] = 0;
   out_5093826771868110853[71] = 0;
   out_5093826771868110853[72] = 1;
   out_5093826771868110853[73] = 0;
   out_5093826771868110853[74] = 0;
   out_5093826771868110853[75] = 0;
   out_5093826771868110853[76] = 0;
   out_5093826771868110853[77] = 0;
   out_5093826771868110853[78] = 0;
   out_5093826771868110853[79] = 0;
   out_5093826771868110853[80] = 0;
   out_5093826771868110853[81] = 0;
   out_5093826771868110853[82] = 0;
   out_5093826771868110853[83] = 0;
   out_5093826771868110853[84] = 0;
   out_5093826771868110853[85] = 0;
   out_5093826771868110853[86] = 0;
   out_5093826771868110853[87] = 0;
}
void h_13(double *state, double *unused, double *out_1035498849764318858) {
   out_1035498849764318858[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1035498849764318858[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1035498849764318858[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7394664322068384603) {
   out_7394664322068384603[0] = 0;
   out_7394664322068384603[1] = 0;
   out_7394664322068384603[2] = 0;
   out_7394664322068384603[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7394664322068384603[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7394664322068384603[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7394664322068384603[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7394664322068384603[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7394664322068384603[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7394664322068384603[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7394664322068384603[10] = 0;
   out_7394664322068384603[11] = 0;
   out_7394664322068384603[12] = 0;
   out_7394664322068384603[13] = 0;
   out_7394664322068384603[14] = 0;
   out_7394664322068384603[15] = 0;
   out_7394664322068384603[16] = 0;
   out_7394664322068384603[17] = 0;
   out_7394664322068384603[18] = 0;
   out_7394664322068384603[19] = 0;
   out_7394664322068384603[20] = 0;
   out_7394664322068384603[21] = 0;
   out_7394664322068384603[22] = 0;
   out_7394664322068384603[23] = 0;
   out_7394664322068384603[24] = 0;
   out_7394664322068384603[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7394664322068384603[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7394664322068384603[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7394664322068384603[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7394664322068384603[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7394664322068384603[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7394664322068384603[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7394664322068384603[32] = 0;
   out_7394664322068384603[33] = 0;
   out_7394664322068384603[34] = 0;
   out_7394664322068384603[35] = 0;
   out_7394664322068384603[36] = 0;
   out_7394664322068384603[37] = 0;
   out_7394664322068384603[38] = 0;
   out_7394664322068384603[39] = 0;
   out_7394664322068384603[40] = 0;
   out_7394664322068384603[41] = 0;
   out_7394664322068384603[42] = 0;
   out_7394664322068384603[43] = 0;
   out_7394664322068384603[44] = 0;
   out_7394664322068384603[45] = 0;
   out_7394664322068384603[46] = 0;
   out_7394664322068384603[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7394664322068384603[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7394664322068384603[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7394664322068384603[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7394664322068384603[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7394664322068384603[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7394664322068384603[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7394664322068384603[54] = 0;
   out_7394664322068384603[55] = 0;
   out_7394664322068384603[56] = 0;
   out_7394664322068384603[57] = 0;
   out_7394664322068384603[58] = 0;
   out_7394664322068384603[59] = 0;
   out_7394664322068384603[60] = 0;
   out_7394664322068384603[61] = 0;
   out_7394664322068384603[62] = 0;
   out_7394664322068384603[63] = 0;
   out_7394664322068384603[64] = 0;
   out_7394664322068384603[65] = 0;
}
void h_14(double *state, double *unused, double *out_3756012193049619054) {
   out_3756012193049619054[0] = state[10];
   out_3756012193049619054[1] = state[11];
   out_3756012193049619054[2] = state[12];
}
void H_14(double *state, double *unused, double *out_900531992931724012) {
   out_900531992931724012[0] = 0;
   out_900531992931724012[1] = 0;
   out_900531992931724012[2] = 0;
   out_900531992931724012[3] = 0;
   out_900531992931724012[4] = 0;
   out_900531992931724012[5] = 0;
   out_900531992931724012[6] = 0;
   out_900531992931724012[7] = 0;
   out_900531992931724012[8] = 0;
   out_900531992931724012[9] = 0;
   out_900531992931724012[10] = 1;
   out_900531992931724012[11] = 0;
   out_900531992931724012[12] = 0;
   out_900531992931724012[13] = 0;
   out_900531992931724012[14] = 0;
   out_900531992931724012[15] = 0;
   out_900531992931724012[16] = 0;
   out_900531992931724012[17] = 0;
   out_900531992931724012[18] = 0;
   out_900531992931724012[19] = 0;
   out_900531992931724012[20] = 0;
   out_900531992931724012[21] = 0;
   out_900531992931724012[22] = 0;
   out_900531992931724012[23] = 0;
   out_900531992931724012[24] = 0;
   out_900531992931724012[25] = 0;
   out_900531992931724012[26] = 0;
   out_900531992931724012[27] = 0;
   out_900531992931724012[28] = 0;
   out_900531992931724012[29] = 0;
   out_900531992931724012[30] = 0;
   out_900531992931724012[31] = 0;
   out_900531992931724012[32] = 0;
   out_900531992931724012[33] = 1;
   out_900531992931724012[34] = 0;
   out_900531992931724012[35] = 0;
   out_900531992931724012[36] = 0;
   out_900531992931724012[37] = 0;
   out_900531992931724012[38] = 0;
   out_900531992931724012[39] = 0;
   out_900531992931724012[40] = 0;
   out_900531992931724012[41] = 0;
   out_900531992931724012[42] = 0;
   out_900531992931724012[43] = 0;
   out_900531992931724012[44] = 0;
   out_900531992931724012[45] = 0;
   out_900531992931724012[46] = 0;
   out_900531992931724012[47] = 0;
   out_900531992931724012[48] = 0;
   out_900531992931724012[49] = 0;
   out_900531992931724012[50] = 0;
   out_900531992931724012[51] = 0;
   out_900531992931724012[52] = 0;
   out_900531992931724012[53] = 0;
   out_900531992931724012[54] = 0;
   out_900531992931724012[55] = 0;
   out_900531992931724012[56] = 1;
   out_900531992931724012[57] = 0;
   out_900531992931724012[58] = 0;
   out_900531992931724012[59] = 0;
   out_900531992931724012[60] = 0;
   out_900531992931724012[61] = 0;
   out_900531992931724012[62] = 0;
   out_900531992931724012[63] = 0;
   out_900531992931724012[64] = 0;
   out_900531992931724012[65] = 0;
}
void h_33(double *state, double *unused, double *out_8369402130700828615) {
   out_8369402130700828615[0] = state[16];
   out_8369402130700828615[1] = state[17];
   out_8369402130700828615[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4528889502663109650) {
   out_4528889502663109650[0] = 0;
   out_4528889502663109650[1] = 0;
   out_4528889502663109650[2] = 0;
   out_4528889502663109650[3] = 0;
   out_4528889502663109650[4] = 0;
   out_4528889502663109650[5] = 0;
   out_4528889502663109650[6] = 0;
   out_4528889502663109650[7] = 0;
   out_4528889502663109650[8] = 0;
   out_4528889502663109650[9] = 0;
   out_4528889502663109650[10] = 0;
   out_4528889502663109650[11] = 0;
   out_4528889502663109650[12] = 0;
   out_4528889502663109650[13] = 0;
   out_4528889502663109650[14] = 0;
   out_4528889502663109650[15] = 0;
   out_4528889502663109650[16] = 1;
   out_4528889502663109650[17] = 0;
   out_4528889502663109650[18] = 0;
   out_4528889502663109650[19] = 0;
   out_4528889502663109650[20] = 0;
   out_4528889502663109650[21] = 0;
   out_4528889502663109650[22] = 0;
   out_4528889502663109650[23] = 0;
   out_4528889502663109650[24] = 0;
   out_4528889502663109650[25] = 0;
   out_4528889502663109650[26] = 0;
   out_4528889502663109650[27] = 0;
   out_4528889502663109650[28] = 0;
   out_4528889502663109650[29] = 0;
   out_4528889502663109650[30] = 0;
   out_4528889502663109650[31] = 0;
   out_4528889502663109650[32] = 0;
   out_4528889502663109650[33] = 0;
   out_4528889502663109650[34] = 0;
   out_4528889502663109650[35] = 0;
   out_4528889502663109650[36] = 0;
   out_4528889502663109650[37] = 0;
   out_4528889502663109650[38] = 0;
   out_4528889502663109650[39] = 1;
   out_4528889502663109650[40] = 0;
   out_4528889502663109650[41] = 0;
   out_4528889502663109650[42] = 0;
   out_4528889502663109650[43] = 0;
   out_4528889502663109650[44] = 0;
   out_4528889502663109650[45] = 0;
   out_4528889502663109650[46] = 0;
   out_4528889502663109650[47] = 0;
   out_4528889502663109650[48] = 0;
   out_4528889502663109650[49] = 0;
   out_4528889502663109650[50] = 0;
   out_4528889502663109650[51] = 0;
   out_4528889502663109650[52] = 0;
   out_4528889502663109650[53] = 0;
   out_4528889502663109650[54] = 0;
   out_4528889502663109650[55] = 0;
   out_4528889502663109650[56] = 0;
   out_4528889502663109650[57] = 0;
   out_4528889502663109650[58] = 0;
   out_4528889502663109650[59] = 0;
   out_4528889502663109650[60] = 0;
   out_4528889502663109650[61] = 0;
   out_4528889502663109650[62] = 1;
   out_4528889502663109650[63] = 0;
   out_4528889502663109650[64] = 0;
   out_4528889502663109650[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2143820057594458175) {
  H(in_vec, out_2143820057594458175);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7485915491974212468) {
  err_fun(nom_x, delta_x, out_7485915491974212468);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7598107627610175110) {
  inv_err_fun(nom_x, true_x, out_7598107627610175110);
}
void live_H_mod_fun(double *state, double *out_2937987622268780709) {
  H_mod_fun(state, out_2937987622268780709);
}
void live_f_fun(double *state, double dt, double *out_4615445404091588944) {
  f_fun(state,  dt, out_4615445404091588944);
}
void live_F_fun(double *state, double dt, double *out_1120091521351388821) {
  F_fun(state,  dt, out_1120091521351388821);
}
void live_h_4(double *state, double *unused, double *out_2921641620890039986) {
  h_4(state, unused, out_2921641620890039986);
}
void live_H_4(double *state, double *unused, double *out_6386686942332723458) {
  H_4(state, unused, out_6386686942332723458);
}
void live_h_9(double *state, double *unused, double *out_3756012193049619054) {
  h_9(state, unused, out_3756012193049619054);
}
void live_H_9(double *state, double *unused, double *out_900531992931724012) {
  H_9(state, unused, out_900531992931724012);
}
void live_h_10(double *state, double *unused, double *out_1854846109295052328) {
  h_10(state, unused, out_1854846109295052328);
}
void live_H_10(double *state, double *unused, double *out_7074881526148492092) {
  H_10(state, unused, out_7074881526148492092);
}
void live_h_12(double *state, double *unused, double *out_3945832473763671516) {
  h_12(state, unused, out_3945832473763671516);
}
void live_H_12(double *state, double *unused, double *out_1367230534300761663) {
  H_12(state, unused, out_1367230534300761663);
}
void live_h_35(double *state, double *unused, double *out_6054195810410085163) {
  h_35(state, unused, out_6054195810410085163);
}
void live_H_35(double *state, double *unused, double *out_1378332498024252046) {
  H_35(state, unused, out_1378332498024252046);
}
void live_h_32(double *state, double *unused, double *out_6543260540981204956) {
  h_32(state, unused, out_6543260540981204956);
}
void live_H_32(double *state, double *unused, double *out_5093826771868110853) {
  H_32(state, unused, out_5093826771868110853);
}
void live_h_13(double *state, double *unused, double *out_1035498849764318858) {
  h_13(state, unused, out_1035498849764318858);
}
void live_H_13(double *state, double *unused, double *out_7394664322068384603) {
  H_13(state, unused, out_7394664322068384603);
}
void live_h_14(double *state, double *unused, double *out_3756012193049619054) {
  h_14(state, unused, out_3756012193049619054);
}
void live_H_14(double *state, double *unused, double *out_900531992931724012) {
  H_14(state, unused, out_900531992931724012);
}
void live_h_33(double *state, double *unused, double *out_8369402130700828615) {
  h_33(state, unused, out_8369402130700828615);
}
void live_H_33(double *state, double *unused, double *out_4528889502663109650) {
  H_33(state, unused, out_4528889502663109650);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
